<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Password Cracker Challenge</title>
  <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@500;700&display=swap" rel="stylesheet">
  <style>
    body {
      background: radial-gradient(circle at 50% 20%, #0a0033 0%, #0f0220 40%, #07001a 100%);
      color: #ffffff;
      font-family: 'Orbitron', sans-serif;
      text-align: center;
      padding: 20px;
      margin: 0;
      overflow-x: hidden;
    }

    h1 {
      font-size: 48px;
      margin-bottom: 30px;
      color: #ff66ff;
      text-shadow: 0 0 10px #ff66ff, 0 0 20px #9900cc;
    }

    .top-bar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin: 30px 0;
      flex-wrap: wrap;
    }

    .progress-container {
      flex: 1;
      margin: 0 20px;
    }

    .progress-bar {
      background: rgba(255, 255, 255, 0.1);
      border: 2px solid #66ffff;
      height: 20px;
      border-radius: 10px;
      overflow: hidden;
    }

    .progress-fill {
      height: 100%;
      background: linear-gradient(90deg, #66ffff, #cc99ff);
      width: 0%;
      transition: width 0.4s ease;
    }

    .score {
      flex: 0 0 auto;
      font-size: 20px;
      margin: 0 20px;
      color: #66ffff;
    }

    .lives {
      flex: 0 0 auto;
    }

    .heart {
      font-size: 40px;
      /*margin: 0 5px;*/
      display: inline-block;
      color: #ff66ff;
    }

    .hint-box, .hint-list {
      border: 2px solid #cc99ff;
      padding: 10px;
      margin: 20px auto 10px;
      width: 70%;
      border-radius: 10px;
      background: rgba(255, 255, 255, 0.05);
      color: #ffccff;
      font-size: 20px;
    }

    input {
      padding: 15px;
      font-size: 20px;
      margin: 10px 10px 30px;
      background-color: rgba(255, 255, 255, 0.08);
      color: #ffffff;
      border: 2px solid #66ffff;
      border-radius: 8px;
      outline: none;
      width: 240px;
    }

    button {
      padding: 15px 25px;
      font-size: 20px;
      margin: 10px;
      background: linear-gradient(145deg, #66ffff, #cc99ff);
      color: #0a0033;
      border: none;
      border-radius: 10px;
      box-shadow: 0 5px 0 #330066;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    button:hover {
      background: linear-gradient(145deg, #cc99ff, #66ffff);
      transform: translateY(-3px);
      box-shadow: 0 8px 0 #330066;
    }

    button:active {
      transform: translateY(0);
      box-shadow: 0 2px 0 #330066;
    }

    .feedback {
      font-size: 22px;
      margin-top: 25px;
      animation: fadeIn 0.6s ease;
      color: #66ffff;
    }

    .attempts-box, .remaining-box {
      margin: 20px auto;
      border: 2px solid #66ffff;
      padding: 15px;
      width: 60%;
      border-radius: 10px;
      background: rgba(255, 255, 255, 0.05);
      color: #ccffff;
      font-size: 18px;
    }

    .final-score {
      font-size: 42px;
      margin-top: 60px;
      display: none;
      color: #ff66ff;
      text-shadow: 0 0 12px #ff66ff, 0 0 24px #9900cc;
    }

    @keyframes fadeIn {
      from {opacity: 0;}
      to {opacity: 1;}
    }

    .correct { color: #66ff66; }
    .wrong { color: #ff6666; animation: shake 0.4s; }

    @keyframes shake {
      0% { transform: translateX(0); }
      25% { transform: translateX(-5px); }
      50% { transform: translateX(5px); }
      75% { transform: translateX(-5px); }
      100% { transform: translateX(0); }
    }
  </style>
</head>
<body>

<h1>üíª Password Cracker Challenge</h1>

<div class="top-bar">
  <div class="progress-container">
    <div class="progress-bar">
      <div class="progress-fill" id="scoreFill"></div>
    </div>
  </div>
  <div class="score" id="scoreLabel">Score: 0</div>
  <div class="lives">
    <div id="hearts"></div>
  </div>
</div>
<div class="hint-box" id="hintBox"></div>
<div class="hint-list" id="hintList"></div>
<div class="attempts-box">
  <input type="text" id="guessInput" placeholder="Enter your guess">
  <button onclick="checkGuess()">Guess</button>
  <div class="feedback" id="feedback"></div>
</div>

<div class="remaining-box">
  <div><strong>Previous Attempts:</strong> <div id="attemptsLog"></div></div>
  <p>Passwords Remaining: <span id="passwordsLeft"></span></p>
</div>

<div class="final-score" id="finalScreen">
  <h2>üéâ Access Granted</h2>
  <p id="finalScoreText"></p>
</div>

<script>
  const passwords = [
    { word: "password", topic: "Commonly used password!", hints: ["Everyone uses it","You are viewing 3x on this page right now!", "Too obvious", "8 letters", "Begins with 'p'", "Ends with 'd'"] },
    { word: "12345678", topic: "Common used password!", hints: ["Only numbers","Think easy!", "Count them!", "8 digits", "No letters", "Starts with 1"] },
    { word: "FireWall", topic: "Cybersecurity", hints: ["Barrier for traffic", "Protects network", "Not physical", "Has 'Wall' in it", "Starts with F"] },
    { word: "PHishing", topic: "Cybersecurity", hints: ["Fake emails", "Trick users", "Not real fish", "'PH' not 'f'", "Social engineering"] },
    { word: "Encryption", topic: "Cybersecurity", hints: ["Secures data", "Scrambles info", "Needs a key", "Hard to crack", "Begins with E"] }
  ];

  let currentIndex = 0;
  let lives = 5;
  let totalScore = 0;
  let shownHints = [];

  function countCapitals(str) {
    return (str.match(/[A-Z]/g) || []).length;
  }

  function updateHearts() {
    const hearts = document.getElementById("hearts");
    hearts.innerHTML = "‚ù§Ô∏è ".repeat(lives);
    hearts.style.fontSize = "30px";
  }

  function updateScoreBar() {
    const percentage = (currentIndex / passwords.length) * 100;
    document.getElementById("scoreFill").style.width = percentage + "%";
    document.getElementById("scoreLabel").textContent = `Score: ${totalScore}`;
  }

  function updateHintList() {
    const list = document.getElementById("hintList");
    list.innerHTML = shownHints.map(h => `<div>üîê ${h}</div>`).join('');
  }

  function startGame() {
    lives = 5;
    shownHints = [passwords[currentIndex].hints[0]];
    updateHearts();
    updateScoreBar();
    updateHintList();
    document.getElementById("feedback").textContent = '';
    document.getElementById("feedback").className = 'feedback';
    document.getElementById("attemptsLog").innerHTML = '';
    document.getElementById("guessInput").value = '';
    document.getElementById("passwordsLeft").textContent = passwords.length - currentIndex - 1;

    const pw = passwords[currentIndex].word;
    const topic = passwords[currentIndex].topic;
    const caps = countCapitals(pw);
    document.getElementById("hintBox").innerHTML = `<b>Password ${currentIndex + 1}</b><br>Topic: ${topic}<br>Length: ${pw.length}<br>Capital Letters: ${caps}`;
  }

  function checkGuess() {
    const guess = document.getElementById("guessInput").value;
    const password = passwords[currentIndex].word;

    if (guess.length !== password.length) {
      alert(`Please enter a ${password.length}-letter guess!`);
      return;
    }

    const feedbackEl = document.getElementById("feedback");
    if (guess === password) {
  feedbackEl.textContent = `‚úÖ Access Granted! The password was: ${password}`;
  feedbackEl.className = "feedback correct";
  totalScore += [0, 3, 4, 6, 8, 10][lives];
  setTimeout(nextPassword, 6000);
  return;
}


    let correctPos = 0, correctLetter = 0;
    let pwArr = password.split('');
    let guessArr = guess.split('');

    for (let i = 0; i < password.length; i++) {
      if (guessArr[i] === pwArr[i]) {
        correctPos++;
        pwArr[i] = null;
        guessArr[i] = null;
      }
    }

    for (let i = 0; i < guessArr.length; i++) {
      if (guessArr[i] && pwArr.includes(guessArr[i])) {
        correctLetter++;
        pwArr[pwArr.indexOf(guessArr[i])] = null;
      }
    }

    lives--;
    updateHearts();

    const nextHint = passwords[currentIndex].hints[6 - lives - 1];
    if (nextHint) {
      shownHints.push(nextHint);
      updateHintList();
    }

    feedbackEl.textContent = `‚ùå ${correctPos} correct position, ${correctLetter} right letter wrong place.`;
    feedbackEl.className = "feedback wrong";

    const log = document.getElementById("attemptsLog");
    const logEntry = document.createElement("div");
    logEntry.textContent = guess;
    log.appendChild(logEntry);

    if (lives === 0) {
  feedbackEl.textContent = `üö® Locked out! The password was: ${password}`;
  setTimeout(nextPassword, 6000);
}

  }

  function nextPassword() {
  currentIndex++;
  if (currentIndex >= passwords.length) {
    document.body.innerHTML = `
      <h1 style="font-size: 60px; color: #66ff66; text-shadow: 0 0 15px #00ffcc;">‚úÖ ACCESS GRANTED</h1>
      <div style="font-size: 32px; color: #ffffff; margin-top: 40px;">Final Score: ${totalScore} / ${passwords.length * 10}</div>
      <div style="margin-top: 50px;">
        <button onclick="restartGame()" style="font-size: 24px; margin: 10px; padding: 10px 20px;">‚ñ∂Ô∏è Play Again</button>
        <button onclick="window.location.href='/levels'" style="font-size: 24px; margin: 10px; padding: 10px 20px;">‚¨ÖÔ∏è Go Back</button>
        <button onclick="window.location.href='/level3'" style="font-size: 24px; margin: 10px; padding: 10px 20px;">‚è≠Ô∏è Next Game</button>
      </div>
    `;
    return;
  }
  startGame();
}

function restartGame() {
  currentIndex = 0;
  totalScore = 0;
  startGame();
}

window.onload = startGame;



  window.onload = startGame;
</script>
</body>
</html>
